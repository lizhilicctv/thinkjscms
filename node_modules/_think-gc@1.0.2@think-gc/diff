diff --git a/.eslintrc b/.eslintrc
index 83d68d3..3b1360e 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -1,32 +1,3 @@
 {
-  "parser": "babel-eslint",
-  "env": {
-    "node": true,
-    "es6": true
-  },
-  "rules": {
-    "strict": [0],
-    "eqeqeq": 2,
-    "quotes": [2, "single", {"allowTemplateLiterals": true}],
-    "no-underscore-dangle": 0,
-    "eol-last": 0,
-    "camelcase": 0,
-    "no-loop-func": 0,
-    "no-trailing-spaces": 0,
-    "consistent-return": 0,
-    "new-cap": 0,
-    "no-shadow": 0,
-    "semi": 0,
-    "no-process-exit": 0,
-    "no-empty": 0,
-    "yoda": 0,
-    "no-const-assign": "warn",
-    "no-new-func": 0,
-    "no-labels": 0,
-    "no-this-before-super": "warn",
-    "no-undef": "warn",
-    "no-unreachable": "warn",
-    "no-unused-vars": "warn",
-    "valid-typeof": "warn"
-  }
-}
+  "extends": "think"
+}
\ No newline at end of file
diff --git a/index.js b/index.js
index fe6da1c..b35232e 100644
--- a/index.js
+++ b/index.js
@@ -2,34 +2,34 @@ const assert = require('assert');
 const helper = require('think-helper');
 const debug = require('debug')('think-gc');
 
-//min interval, 1 hour
+// min interval, 1 hour
 const MIN_STEP = 3600 * 1000;
 let intervalTimes = 0;
-let gcTypes = {};
+const gcTypes = {};
 let timerStart = false;
 
-function gc(instance, interval = MIN_STEP, MIN_INTERVAL = MIN_STEP){
+function gc(instance, interval = MIN_STEP, MIN_INTERVAL = MIN_STEP) {
   assert(instance && helper.isFunction(instance.gc), 'instance.gc must be a function');
   assert(instance && helper.isString(instance.gcType), 'instance.gcType must be a string');
-  if(gcTypes[instance.gcType]) return;
+  if (gcTypes[instance.gcType]) return;
 
-  gcTypes[instance.gcType] = function(){
-    if(helper.isFunction(interval)){
-      if(!interval()) return;
-    }else{
+  gcTypes[instance.gcType] = function() {
+    if (helper.isFunction(interval)) {
+      if (!interval()) return;
+    } else {
       interval = helper.ms(interval);
-      let num = Math.floor(interval / MIN_INTERVAL);
-      if(intervalTimes % num !== 0) return;
+      const num = Math.floor(interval / MIN_INTERVAL);
+      if (intervalTimes % num !== 0) return;
     }
     debug(`run gc, type: ${instance.gcType}`);
     instance.gc();
-  }
+  };
 
-  if(!timerStart){
+  if (!timerStart) {
     timerStart = true;
     const timer = setInterval(() => {
       intervalTimes++;
-      for(let type in gcTypes){
+      for (const type in gcTypes) {
         gcTypes[type]();
       }
     }, MIN_INTERVAL);
diff --git a/package.json b/package.json
index d3a0068..741a513 100644
--- a/package.json
+++ b/package.json
@@ -8,7 +8,8 @@
   },
   "scripts": {
     "test": "eslint index.js && nyc ava test/index.js",
-    "coverage": "nyc ava test/index.js && nyc report --reporter=html"
+    "coverage": "nyc ava test/index.js && nyc report --reporter=html",
+    "lint": "eslint index.js"
   },
   "ava": {
     "files": [
@@ -31,7 +32,8 @@
     "babel-core": "^6.22.1",
     "babel-eslint": "^7.1.1",
     "coveralls": "^2.12.0",
-    "eslint": "2.8.0",
+    "eslint": "^4.2.0",
+    "eslint-config-think": "^1.0.1",
     "nyc": "^7.0.0"
   },
   "keywords": [],
